<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.linker.direct.main.member">
	
	<resultMap id="memberResult" type="com.linker.direct.main.member.VO.MemberVO">
		<result property="user_id"			column="user_id" />
		<result property="id"				column="id" />
		<result property="pwd"				column="pwd" />
		<result property="name"				column="name" />
		<result property="email"			column="email" />
		<result property="phone"			column="phone" />
		<result	property="birthday" 		column="birthday" />
		<result	property="zip_code" 		column="zip_code" />
		<result	property="address" 			column="address" />
		<result	property="address_detail" 	column="address_detail" />
		<result	property="point"	 		column="point" />
		<result property="created_at"		column="created_at" />
		<result property="updated_at"		column="updated_at" />
		<result property="status"			column="status" />
		<result property="grade"			column="grade" />
		<result property="role"				column="role" />
	</resultMap>
	
	<!-- 로그인 처리 -->
	<select id = "loginByID" parameterType="com.linker.direct.main.member.VO.MemberVO" resultMap="memberResult">
		<![CDATA[
			select *
			from user 
			where id = #{id} 
		]]>
	</select>
	
	<!-- 회원가입 처리 -->
	<insert id="addMember" parameterType="com.linker.direct.main.member.VO.MemberVO">
		<![CDATA[
			insert into user (id, pwd, name, email, phone, birthday, zip_code, address, address_detail, created_at, terms_status) 
			values (#{id}, #{pwd}, #{name}, #{email}, #{phone}, #{birthday}, #{zip_code}, #{address}, #{address_detail}, sysdate(), #{terms_status})
		]]>
	</insert>
	
	<!-- 회원 전체 목록 추출하기 -->
	<select id="selectAllMemberList" resultMap="memberResult">
		<![CDATA[
			select * from user order by created_at desc
		]]>
	</select>
	
	<!-- 아이디에 해당하는 회원 정보 수정 -->
	<update id="updateMember" parameterType="com.linker.direct.main.member.VO.MemberVO">
		<![CDATA[
			update user set pwd = #{pwd}, name = #{name}, email = #{email}, phone = #{phone}, birthday = #{birthday}, zip_code = #{zip_code}, address = #{address}, address_detail = #{address_detail} where id = #{id}
		]]>
	</update>
	
	<!-- 아이디에 해당하는 회원 정보 삭제 -->
	<delete id="removeMember" parameterType="com.linker.direct.main.member.VO.MemberVO">
		<![CDATA[
			delete from user where id = #{id}
		]]>
	</delete>
	
	
	<!-- 아이디 중복 검사 : 입력한 아이디가 존재하는지 알아낸다. -->
	<select id="idCheck" parameterType="com.linker.direct.main.member.VO.MemberVO" resultType="int">
		<![CDATA[
			select count(*) from user where id = #{id}
		]]>
	</select>
	
</mapper>