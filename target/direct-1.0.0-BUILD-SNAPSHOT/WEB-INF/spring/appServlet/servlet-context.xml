<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xmlns:contest="http://www.springframework.org/schema/context"
			 xmlns:aop="http://www.springframework.org/schema/aop"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
			 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
>


	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.linker.direct" />
	<context:component-scan base-package="com.linker.direct.search" />
	<context:component-scan base-package="com.linker.direct.cart"/>
	<context:component-scan base-package="com.linker.direct.search"/>

<!--aop 설정-->
	<context:annotation-config></context:annotation-config>

<!-- component-scan을 이용하여 해당 패키지를 스캔하게 된다.-->
<!-- 이 과정에서 LogAdvice가 스프링의 Bean객체로 등록된다.	-->
	<context:component-scan base-package="com.linker.direct.common.aop" />
<!--	<aop:aspectj-autoproxy></aop:aspectj-autoproxy> 를 이용해서
		LogAdvice에 설정한 @Before가 동작하게 된다.-->

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 인터셉터 개게 생성 -->
	<beans:bean id="LoginInterceptor" class="com.linker.direct.common.interceptor.LoginInterceptor"></beans:bean>

	<!-- 인터셉터를 등록 -->
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<mapping path="/search/searchList"/>
			<beans:ref bean="LoginInterceptor"/>
		</interceptor>
	</interceptors>



</beans:beans>
